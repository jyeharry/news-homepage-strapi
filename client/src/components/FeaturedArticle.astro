---
import fetchApi from '@/lib/strapi'
import Button from './Button.astro'
import type { Article } from '@/types'

const [article] = await fetchApi<Article[]>({endpoint: 'articles', query: {
  filters: {
    isFeatured: {
      $eq: true,
    }
  },
  populate: [
    'displayImage',
    'displayImage.default',
    'displayImage.sources',
    'displayImage.sources.source',
  ]
}})
---

<section class='span-2'>
  <h1 class='sr-only'>Featured Article</h1>
  <article>
    <picture class='span-2'>
      {article.displayImage.sources.map(({screenWidth, source}) => (
        <source
          media={screenWidth}
          srcset={import.meta.env.STRAPI_URL + source.url}
        />
      ))}
      <img src={import.meta.env.STRAPI_URL + article.displayImage.default.url} alt=''>
    </picture>

    <h2 class='txt-xl'>{article.title}</h2>

    <div class='stack'>
      <p>{article.preview}</p>

      <Button href={`/articles/${article.slug}`}>Read more</Button>
    </div>
  </article>
</section>

<style>
  article {
    display: grid;
    gap: 2rem;

    @container (width > calc(2 * 35ch)) {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  picture {
    grid-column: 1 / -1;
  }
</style>
